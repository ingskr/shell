``````````磁盘挂载```````````````
临时挂载:
mount /dev/sdb2 /backup
永久挂载：（填写格式）
设备文件 挂载目录 格式类型 权限选项 是否备份 是否自检
写入/etc/fstab
字段	意义
设备文件	一般为设备的路径+设备名称，也可以写唯一识别码（UUID，Universally Unique Identifier）
挂载目录	指定要挂载到的目录，需在挂载前创建好
格式类型	指定文件系统的格式，比如Ext3、Ext4、XFS、SWAP、iso9660（此为光盘设备）等
权限选项	若设置为defaults，则默认权限为：rw, suid, dev, exec, auto, nouser, async
是否备份	若为1则开机后使用dump进行磁盘备份，为0则不备份
是否自检	若为1则开机后自动进行磁盘自检，为0则不自检
将文件系统为ext4的硬件设备/dev/sdb2在开机后自动挂载到/backup目录上，并保持默认权限且无需开机自检
vim /etc/fstab
/dev/sdb2       /backup                         exit    defaults        0 0
umount命令
umount[挂载点/设备文件]
fdisk命令 理解 n p 退出时输入 w 
有些时候系统并没有自动把分区信息同步给Linux内核
输入partprobe命令
在使用file /dev/sdb1查看
格式化分区
[root@ly ~]# mkfs.ext3 /dev/sdb1
挂载并使用存储设备
mount /dev/sdb1 /new/
df -h
/dev/sdb1                 20G   45M   19G   1% /new
#####################################################################
         扫描    建立       显示          删除        拓展        缩小
物理卷    pvscan  pvcreate   pvdispaly   pvremove    
卷组管理  vgscan vgcreate   vgdisplay    vgremove     vgextend    vgreduce
逻辑卷    lvscan   lvcreate  lvdisplay   lvremove    lvextend     lvreduce
逻辑卷部署
1、让新添加的硬盘支持lvm技术
pvcreate /dev/sdc
2、将硬盘设备添加到stroage卷组中
vgcreate stroage /dev/sdc
vgdispaly#查看卷组状态
3.切割约150MB的卷逻辑设备（对逻辑卷的切割有两种计量单位）
（1）以容量为单位，-L,如，使用-L 150M 生成150MB的逻辑卷。
（2）以基本单元的个数为单位，-l,每个基本单元默认为4MB，37*4MB=148MB。
lvcreate -n vo -l 37 storage
lvdisplay
4、生成好的逻辑卷格式化，然后挂载使用
mkfs.ext4 /dev/stroage/vo
mkdir /new1
mount /dev/stroage/vo /new1

5、查看挂载状态，并写入配置文件
df -h
blkid获取分区的uuid编号
[root@ly ~]# blkid /dev/mapper/storage-vo
/dev/mapper/storage-vo: UUID="09a361b4-7961-4e31-873f-2007b8da0ad9" TYPE="ext4" 
echo "UUID="09a361b4-7961-4e31-873f-2007b8da0ad9" /new1 ext4 defaults 0 0 " >> /etc/fstab 
###############################################################################################
扩容逻辑卷
只要卷组中有足够的资源，就可以一直未逻辑卷扩容，扩容前一定要记得卸载设备和挂载点的关联。
[root@ly ~]# umount /new1
1、将上一个实验的140MB扩容为290MB
[root@ly ~]# lvextend -L 290M /dev/storage/vo 
  Rounding size to boundary between physical extents: 292.00 MiB.
  Size of logical volume storage/vo changed from 148.00 MiB (37 extents) to 292.00 MiB (73 extents).
  Logical volume storage/vo successfully resized.
2.检查硬盘的完整性，并重置硬盘容量
e2fsck -f /dev/storage/vo
resize2fs /dev/storage/vo
3.重新挂载磁盘并检查挂载状态
mount -a
df -h
#############################################################################
缩小逻辑卷
！！！！！！！！！！提前备份好数据，缩容之前检查系统完整性，缩容前卸载文件系统！！！！！！！！！！！！！！！！！！！！！！！！！
1.检查系统完整性
[root@ly ~]# umount /new1
[root@ly ~]# e2fsck -f /dev/storage/vo 
e2fsck 1.42.9 (28-Dec-2013)
Pass 1: Checking inodes, blocks, and sizes
Pass 2: Checking directory structure
Pass 3: Checking directory connectivity
Pass 4: Checking reference counts
Pass 5: Checking group summary information
/dev/storage/vo: 12/74000 files (0.0% non-contiguous), 15509/299008 blocks
2.把逻辑卷vo的容量减小到120MB。
[root@ly ~]# resize2fs /dev/storage/vo 120M
resize2fs 1.42.9 (28-Dec-2013)
Resizing the filesystem on /dev/storage/vo to 122880 (1k) blocks.
The filesystem on /dev/storage/vo is now 122880 blocks long.

[root@ly ~]# lvreduce -L 120M /dev/storage/vo 
  WARNING: Reducing active logical volume to 120.00 MiB.
  THIS MAY DESTROY YOUR DATA (filesystem etc.)
Do you really want to reduce storage/vo? [y/n]: y
  Size of logical volume storage/vo changed from 292.00 MiB (73 extents) to 120.00 MiB (30 extents).
  Logical volume storage/vo successfully resized.
3.重新挂载文件系统并查看状态。
[root@ly ~]# mount -a
[root@ly ~]# df -h
Filesystem               Size  Used Avail Use% Mounted on
/dev/mapper/centos-root   17G   11G  6.5G  63% /
devtmpfs                 1.9G     0  1.9G   0% /dev
tmpfs                    1.9G     0  1.9G   0% /dev/shm
tmpfs                    1.9G   13M  1.9G   1% /run
tmpfs                    1.9G     0  1.9G   0% /sys/fs/cgroup
/dev/sdb1                 20G   45M   19G   1% /new
/dev/sda1               1014M  179M  836M  18% /boot
tmpfs                    378M  4.0K  378M   1% /run/user/42
tmpfs                    378M   24K  378M   1% /run/user/1000
/dev/sr0                 4.3G  4.3G     0 100% /run/media/ly/CentOS 7 x86_64
tmpfs                    378M     0  378M   0% /run/user/0
/dev/mapper/storage-vo   113M  1.6M  103M   2% /new1
###########################################################3
逻辑卷快照
逻辑卷快照功能有两个特点：
（1）快照卷的容量必须等同于逻辑卷的容量；
（2）快照卷仅一次有效，一旦执行还原操作后则会被立即自动删除。
查看卷组信息
vgdisplay
--- Volume group ---
  VG Name               storage
  System ID             
  Format                lvm2
  Metadata Areas        1
  Metadata Sequence No  4
  VG Access             read/write
  VG Status             resizable
  MAX LV                0
  Cur LV                1
  Open LV               1
  Max PV                0
  Cur PV                1
  Act PV                1
  VG Size               <20.00 GiB
  PE Size               4.00 MiB
  Total PE              5119
  Alloc PE / Size       30 / 120.00 MiB
  Free  PE / Size       5089 / <19.88 GiB
  VG UUID               1NZ6Mq-Grlf-pUxB-nXDj-t8k8-dEZ0-xHKf4l
接下来用重定向往逻辑卷设备所挂载的目录中写入一个文件。
[root@ly new1]# echo "Hello new1" > /new1/readme.txt
1.使用-s参数生成一个快照卷，使用-L参数指定切割的大小。
另外，还需要在命令后面写上是针对哪个逻辑卷执行的快照操作。
[root@ly new1]# lvcreate -L 120M -s -n SNAP /dev/storage/vo
  Logical volume "SNAP" created.
[root@ly new1]# lvdisplay
--- Logical volume ---
  LV Path                /dev/storage/SNAP
  LV Name                SNAP
  VG Name                storage
  LV UUID                juiYXQ-CtAq-0P8O-4kyK-iZYM-UOVX-2QZqH2
  LV Write Access        read/write
  LV Creation host, time ly, 2019-06-05 05:57:30 -0400
  LV snapshot status     active destination for vo
  LV Status              available
  # open                 0
  LV Size                120.00 MiB
  Current LE             30
  COW-table size         120.00 MiB
  COW-table LE           30
  Allocated to snapshot  0.01%
  Snapshot chunk size    4.00 KiB
  Segments               1
  Allocation             inherit
  Read ahead sectors     auto
  - currently set to     8192
  Block device           253:5
2.在逻辑卷所挂载的目录创建一个100MB的垃圾文件，然后在沙坎快照卷的状态。可以发现存储空间占的用量上升了。
[root@ly ~]# dd if=/dev/zero of=/new1/files count=1 bs=100M
1+0 records in
1+0 records out
104857600 bytes (105 MB) copied, 1.91332 s, 54.8 MB/s

[root@ly ~]# lvdisplay
--- Logical volume ---
  LV Path                /dev/storage/SNAP
  LV Name                SNAP
  VG Name                storage
  LV UUID                juiYXQ-CtAq-0P8O-4kyK-iZYM-UOVX-2QZqH2
  LV Write Access        read/write
  LV Creation host, time ly, 2019-06-05 05:57:30 -0400
  LV snapshot status     active destination for vo
  LV Status              available
  # open                 0
  LV Size                120.00 MiB
  Current LE             30
  COW-table size         120.00 MiB
  COW-table LE           30
  Allocated to snapshot  83.71%
  Snapshot chunk size    4.00 KiB
  Segments               1
  Allocation             inherit
  Read ahead sectors     auto
  - currently set to     8192
  Block device           253:5
  
3.为校验SNAP快照卷的效果，需对快照卷进行还原操作，在此之前先卸载逻辑卷设备与目录的挂载
[root@ly ~]# umount /new1
[root@ly ~]# lvconvert --merge /dev/storage/SNAP 
  Merging of volume storage/SNAP started.
  storage/vo: Merged: 23.86%
  storage/vo: Merged: 100.00%

4.快照卷会被删除，100MB的垃圾文件也被删除
[root@ly ~]# mount -a
[root@ly ~]# ls /new1
lost+found  readme.txt
[root@ly ~]# 
#######################################################################################################33
删除逻辑卷
当生产环境中想要重新部署lvm或者不需要使用lvm时，则需要执行LVM的删除操作。
为此，需要提前备份好重要的数据信息，然后依次删除逻辑卷、卷组、物理卷设备，这个顺序不可颠倒。
1.消逻辑卷与目录的挂载关联，删除配置文件中永久生效的设备参数。
[root@ly ~]# umount /new1
[root@ly ~]# vim /etc/fstab
2.删除逻辑卷设备，需要输入y来确认操作。
[root@ly ~]# lvremove /dev/storage/vo 
Do you really want to remove active logical volume storage/vo? [y/n]: y
  Logical volume "vo" successfully removed
3.删除卷组，此处只写卷组名称即可，不需要设备的绝对路径。
[root@ly ~]# vgremove storage 
  Volume group "storage" successfully removed
4.删除物理卷设备
[root@ly ~]# pvremove /dev/sdc
  Labels on physical volume "/dev/sdc" successfully wiped.
************************************************************************************************
xfs_quota磁盘容量额配服务
vim /etc/fatab
UUID=812b1f7c-8b5b-43da-8c06-b9999e0fe48b /boot         xfs       defaults,uquota  1 2
添加测试用户，赋予权限
useradd tom
chmou -Rf o+w /boot
xfs_quota -x -c 'limit bsoft=3m bhard=6m isoft=3 ihard=6 tom' /boot
解释：
限制tom这个用户磁盘使用量的软限制硬限制分别为3,6M,创建文件数量的软限制硬限制分别为3个，6个，在/boot这个文件夹下
切换Tom用户
创建体积为8M的文件
dd if=/dev/zero of=/boot/tom bs=8m count=1
可以发现系统受限

edquota用于编辑用户的quota
edquota -u tom
进入即可修改磁盘配额
*****************************************************
部署磁盘阵列
使用mdadm命令
创建RAID 10 名称为“/dev/md0”
mdadm -Cv /dev/md0 -a yes -n 4 -l 10 /dev/sdb /dev/sdc /dev/sdd /dev/sde
mkfs.ext4 /dev/md0 
mkdir /RAID
mount /dev/md0 /RAID
df -h
mdadm -D /dev/md0
echo "/dev/md0 /RAID ext4 defaults 0 0" >> /etc/fstab
